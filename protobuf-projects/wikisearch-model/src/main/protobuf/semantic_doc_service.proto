syntax = "proto3";
import "pipes.proto";
import "semantic_doc.proto";

option java_multiple_files = true;
option java_package = "com.krickert.search.service";
option java_outer_classname = "VectorDoc";
option objc_class_prefix = "HLW";

package com.krickert.search;

service EmbeddingService {
  rpc createEmbeddingsVector(EmbeddingsVectorRequest) returns (EmbeddingsVectorReply) {}
  rpc createEmbeddingsVectors(EmbeddingsVectorsRequest) returns (EmbeddingsVectorsReply) {}
}

message EmbeddingsVectorRequest {
  string text = 1;
}

message EmbeddingsVectorReply {
  repeated float embeddings = 1;
}

message EmbeddingsVectorsRequest {
  repeated string text = 1;
}

message EmbeddingsVectorsReply {
  repeated EmbeddingsVectorReply embeddings = 1;
}

message ChunkOptions {
  int32 length = 1;
  int32 overlap = 2;
}

message ChunkRequest {
  string text = 1;
  ChunkOptions options = 2;
}

message ChunkReply {
  repeated string chunks = 1;
}

service ChunkService {
  rpc chunk (ChunkRequest) returns (ChunkReply) {}
}

service SemanticDocService {
  rpc embedDocument (SemanticRequest) returns (SemanticReply) {}
}

message SemanticRequest {
  com.krickert.search.model.pipe.PipeDocument document = 1;
  ChunkOptions options = 2;
}

message SemanticReply {
  com.krickert.search.model.semantic.SemanticDocument document = 1;
}

