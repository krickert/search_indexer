
41372Sprague‚ÄìGrundy theoremèoIn combinatorial game theory, the Sprague‚ÄìGrundy theorem states that every impartial game under the normal play convention is equivalent to a one-heap game of nim, or to an infinite generalization of nim. It can therefore be represented as a natural number, the size of the heap in its equivalent game of nim, as an ordinal number in the infinite generalization, or alternatively as a nimber, the value of that one-heap game in an algebraic system whose addition operation combines multiple heaps to form a single equivalent heap in nim.

The Grundy value or nim-value of any impartial game is the unique nimber that the game is equivalent to.  In the case of a game whose positions are indexed by the natural numbers (like nim itself, which is indexed by its heap sizes), the sequence of nimbers for successive positions of the game is called the nim-sequence of the game.

The Sprague‚ÄìGrundy theorem and its proof encapsulate the main results of a theory discovered independently by R. P. Sprague (1936) and P. M. Grundy (1939). Reprinted, 1964, 27: 9‚Äì11.

Definitions

For the purposes of the Sprague‚ÄìGrundy theorem, a game is a two-player sequential game of perfect information satisfying the ending condition (all games come to an end: there are no infinite lines of play) and the normal play condition (a player who cannot move loses).

At any given point in the game, a player's position is the set of moves they are allowed to make.  As an example, we can define the zero game to be the two-player game where neither player has any legal moves.  Referring to the two players as A (for Alice) and B (for Bob), we would denote their positions as (A, B) = (\{\}, \{\}), since the set of moves each player can make is empty.

An impartial game is one in which at any given point in the game, each player is allowed exactly the same set of moves. Normal-play nim is an example of an impartial game. In nim, there are one or more heaps of objects, and two players (we'll call them Alice and Bob), take turns choosing a heap and removing 1 or more objects from it. The winner is the player who removes the final object from the final heap.  The game is impartial because for any given configuration of pile sizes, the moves Alice can make on her turn are exactly the same moves Bob would be allowed to make if it were his turn.  In contrast, a game such as checkers is not impartial because, supposing Alice were playing red and Bob were playing black, for any given arrangement of pieces on the board, if it were Alice's turn, she would only be allowed to move the red pieces, and if it were Bob's turn, he would only be allowed to move the black pieces.

Note that any configuration of an impartial game can therefore be written as a single position, because the moves will be the same no matter whose turn it is. For example, the position of the zero game can simply be written \{\}, because if it's Alice's turn, she has no moves to make, and if it's Bob's turn, he has no moves to make either.
A move can be associated with the position it leaves the next player in. 

Doing so allows positions to be defined recursively.  For example, consider the following game of Nim played by Alice and Bob.

Example Nim Game 

* At step 6 of the game (when all of the heaps are empty) the position is \{\}, because Bob has no valid moves to make.  We name this position *0. 
* At step 5, Alice had exactly one option: to remove one object from heap C, leaving Bob with no moves.  Since her move leaves Bob in position *0, her position is written \{ *0 \}.  We name this position *1.
* At step 4, Bob had two options: remove one from B or remove one from C.  Note, however, that it didn't really matter which heap Bob removed the object from: Either way, Alice would be left with exactly one object in exactly one pile. So, using our recursive definition, Bob really only has one move: *1.   Thus, Bob's position is \{*1\}.
* At step 3, Alice had 3 options: remove two from C, remove one from C, or remove one from B.  Removing two from C leaves Bob in position *1.  Removing one from C leaves Bob with two piles, each of size one, i.e., position \{*1\}, as described in step 4. However, removing 1 from B would leave Bob with two objects in a single pile. His moves would then be *0 and  *1, so her move would result in the position \{*0, *1\}.  We call this position *2.  Alice's position is then the set of all her moves: \big\{*1, \{*1\}, *2\big\}.
* Following the same recursive logic, at step 2, Bob's position is \big\{ \{*1, \{*1\}, *2\}, *2\big\}.
* Finally, at step 1, Alice's position is \Big\{
    \big\{*1, \{*1\}, *2\big\},
    \big\{*2, \{*1, \{*1\},*2\} \big\},
    \big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}
\Big\}.

Nimbers

The special names *0, *1, and *2 referenced in our example game are called nimbers.  In general, the nimber *n corresponds to the position in a game of nim where there are exactly n objects in exactly one heap.  
Formally, nimbers are defined inductively as follows:  *0 is \{\}, *1 \{*0\}, *2 
 \{*0, *1\} and  for all n \geq 0, *(n+1) = *n \cup \{*n\}.

While the word nimber comes from the game nim, nimbers can be used to describe the positions of any finite, impartial game, and in fact, the Sprague‚ÄìGrundy theorem states that every  instance of a finite, impartial game can be associated with a single nimber.

Combining Games

Two games can be combined by adding their positions together.
For example, consider another game of nim with heaps A', B', and C'.

Example Game 2

We can combine it with our first example to get a combined game with six heaps: A, B, C, A', B', and C':

Combined Game

To differentiate between the two games, for the first example game, we'll label its starting position \color{blue}S, and color it blue:
\color{blue}S 
 \Big\{
    \big\{*1, \{*1\}, *2\big\},
    \big\{*2, \{*1, \{*1\},*2\} \big\},
    \big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}
\Big\}

For the second example game, we'll label the starting position \color{red}S' and color it red:

\color{red}S' = \Big\{\{*1\}\Big\}.

To compute the starting position of the combined game, remember that a player can either make a move in the first game, leaving the second game untouched, or make a move in the second game, leaving the first game untouched.  So the combined game's starting position is:

\color{blue}S \color{black} + \color{red}S' \color{black}= 
\Big\{
    \color{blue}S\color{black} + \color{red} \{*1\} \color{black}
\Big\} \cup \Big\{
     \color{red}S'\color{black} + \color{blue}\{*1, \{*1\}, *2\} \color{black}, 
     \color{red}S'\color{black} + \color{blue} \{*2, \{*1, \{*1\},*2\} \} \color{black},
     \color{red}S'\color{black} + \color{blue} \{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\} \color{black}
\Big\}

The explicit formula for adding positions is: S+S'=\{S+s'\mid s'\in S'\}\cup\{s+S'\mid s\in S\}, which means that addition is both commutative and associative.

Equivalence
 
Positions in impartial games fall into two outcome classes: either the next player (the one whose turn it is) wins (an \boldsymbol{\mathcal{N}}- position), or the previous player wins (a \boldsymbol{\mathcal{P}}- position).  So, for example, *0 is a \mathcal{P}-position, while *1 is an \mathcal{N}-position.

Two positions G and G' are equivalent if, no matter what position H is added to them, they are always in the same outcome class.  
Formally,
G \approx G'  if and only if \forall H , G + H is in the same outcome class as G' + H.

To use our running examples, notice that in both the first and second games above, we can show that on every turn, Alice has a move that forces Bob into a \mathcal{P}-position. Thus, both \color{blue}S and  \color{red}S' are \mathcal{N}-positions.  (Notice that in the combined game, Bob is the player with the \mathcal{N}-positions. In fact, \color{blue}S \color{black} + \color{red}S'  is a \mathcal{P}-position, which as we will see in Lemma 2, means  \color{blue} S \color{black} \approx \color{red} S'.)

First Lemma

As an intermediate step to proving the main theorem, we show that for every position G and every \mathcal{P}-position A, the equivalence G\approx A+G holds.  By the above definition of equivalence, this amounts to showing that G+H and A+G+H share an outcome class for all H.

Suppose that G+H is a \mathcal{P}-position.  Then the previous player has a winning strategy for A+G+H: respond to moves in A according to their winning strategy for A (which exists by virtue of A being a \mathcal{P}-position), and respond to moves in G+H according to their winning strategy for G+H (which exists for the analogous reason).  So A+G+H must also be a \mathcal{P}-position.

On the other hand, if G+H is an \mathcal{N}-position, then A+G+H is also an \mathcal{N}-position, because the next player has a winning strategy: choose a \mathcal{P}-position from among the G+H options, and we conclude from the previous paragraph that adding A to that position is still a \mathcal{P}-position.  Thus, in this case, A+G+H must be a \mathcal{N}-position, just like G+H.

As these are the only two cases, the lemma holds.

Second Lemma

As a further step, we show that G\approx G' if and only if G+G' is a \mathcal{P}-position.

In the forward direction, suppose that G\approx G'.  Applying the definition of equivalence with H=G, we find that G'+G (which is equal to G+G' by commutativity of addition) is in the same outcome class as G+G.  But G+G must be a \mathcal{P}-position: for every move made in one copy of G, the previous player can respond with the same move in the other copy, and so always make the last move.

In the reverse direction, since AG+G' is a \mathcal{P}-position by hypothesis, it follows from the first lemma, G\approx G+A, that G\approx G+(G+G').   Similarly, since B
G+G is also a \mathcal{P}-position, it follows from the first lemma in the form  G'\approx G'+B that G'\approx G'+(G+G).  By associativity and commutativity, the right-hand sides of these results are equal.  Furthermore, \approx is an equivalence relation because equality is an equivalence relation on outcome classes.  Via the transitivity of \approx, we can conclude that G\approx G'.

Proof

We prove that all positions are equivalent to a nimber by structural induction.  The more specific result, that the given game's initial position must be equivalent to a nimber, shows that the game is itself equivalent to a nimber.

Consider a position G \{G_1, G_2, \ldots, G_k\}. By the induction hypothesis, all of the options are equivalent to nimbers, say G_i \approx *n_i. So let G'
\{*n_1, *n_2, \ldots, *n_k\}.  We will show that G \approx *m, where m is the mex (minimum exclusion) of the numbers n_1, n_2, \ldots, n_k, that is, the smallest non-negative integer not equal to some n_i.

The first thing we need to note is that G \approx G', by way of the second lemma. If k is zero, the claim is trivially true.  Otherwise, consider G+G'. If the next player makes a move to G_i in G, then the previous player can move to *n_i in G', and conversely if the next player makes a move in G'. After this, the position is a \mathcal{P}-position by the lemma's forward implication. Therefore, G+G' is a \mathcal{P}-position, and, citing the lemma's reverse implication, G \approx G'.

Now let us show that G'+*m is a \mathcal{P}-position, which, using the second lemma once again, means that G'\approx *m. We do so by giving an explicit strategy for the previous player.

Suppose that G' and *m are empty.  Then G'+*m is the null set, clearly a \mathcal{P}-position.

Or consider the case that the next player moves in the component *m to the option *m' where m'. Because m was the minimum excluded number, the previous player can move in G' to *m'.  And, as shown before, any position plus itself is a \mathcal{P}-position.

Finally, suppose instead that the next player moves in the component G' to the option *n_i. If n_i  then the previous player moves in *m to *n_i; otherwise, if n_i > m, the previous player moves in *n_i to *m; in either case the result is a position plus itself. (It is not possible that n_i = m because m was defined to be different from all the n_i.)

In summary, we have G\approx G' and G'\approx *m.  By transitivity, we conclude that G \approx *m, as desired.

Development

If G is a position of an impartial game, the unique integer m such that G \approx *m is called its Grundy value, or Grundy number, and the function that assigns this value to each such position is called the Sprague‚ÄìGrundy function.  R. L. Sprague and P. M. Grundy independently gave an explicit definition of this function, not based on any concept of equivalence to nim positions, and showed that it had the following properties:
*The Grundy value of a single nim pile of size m (i.e. of the position *m) is m;
* A position is a loss for the next player to move (i.e. a \mathcal{P}-position) if and only if its Grundy value is zero; and
*The Grundy value of the sum of a finite set of positions is just the nim-sum of the Grundy values of its summands.
It follows straightforwardly from these results that if a position G has a Grundy value of m, then G + H has the same Grundy value as  *m + H, and therefore belongs to the same outcome class, for any position H.   Thus, although Sprague and Grundy never explicitly stated the theorem described in this article, it follows directly from their results and is credited to them.
These results have subsequently been developed into the field of combinatorial game theory, notably by Richard Guy, Elwyn Berlekamp, John Horton Conway and others, where they are now encapsulated in the Sprague‚ÄìGrundy theorem and its proof in the form described here. The field is presented in the books Winning Ways for your Mathematical Plays and On Numbers and Games.

See also

*Genus theory
*Indistinguishability quotient

References

External links

* [http://www.cut-the-knot.org/Curriculum/Games/Grundy.shtml Grundy's game] at cut-the-knot
* [https://www.math.ucla.edu/~tom/Game_Theory/comb.pdf Easily readable, introductory account from the UCLA Math Department]
* [http://sputsoft.com/blog/2009/04/the-game-of-nim.html The Game of Nim] at [http://sputsoft.com sputsoft.com]
*"31339567*åŸ”ö:ARTICLEB˘ù
ıù
wiki_metadata‚ù*ﬁù

	namespace 
#
	dump_date2022-10-23T07:26:04Z
,
date_parsed2024-08-01T02:56:09.367592Z
ˆú
	wiki_textÁú„ú{{short description|Every impartial game position is equivalent to a position in the game of nim}}
{{multiple issues|
{{more footnotes|date=June 2014}}
{{technical|date=June 2014}}
}}

In [[combinatorial game theory]], the '''Sprague&ndash;Grundy theorem''' states that every [[impartial game]] under the [[normal play convention]] is equivalent to a one-heap game of [[nim]], or to an infinite generalization of nim. It can therefore be represented as a [[natural number]], the size of the heap in its equivalent game of nim, as an [[ordinal number]] in the infinite generalization, or alternatively as a [[nimber]], the value of that one-heap game in an algebraic system whose addition operation combines multiple heaps to form a single equivalent heap in nim.

The '''Grundy value''' or '''nim-value''' of any impartial game is the unique nimber that the game is equivalent to.  In the case of a game whose positions are indexed by the natural numbers (like nim itself, which is indexed by its heap sizes), the sequence of nimbers for successive positions of the game is called the '''nim-sequence''' of the game.

The Sprague‚ÄìGrundy theorem and its proof encapsulate the main results of a theory discovered independently by [[Roland Sprague|R. P. Sprague]] (1936)<ref name = "SpraguePaper">{{cite journal
 | last = Sprague | first = R. P. | author-link = Roland Sprague
 | title = √úber mathematische Kampfspiele
 | url = http://www.jstage.jst.go.jp/article/tmj1911/41/0/41_0_438/_article
 | journal = [[Tohoku Mathematical Journal]]
 | language = de
 | year = 1936
 | volume = 41
 | pages = 438‚Äì444
 | zbl = 0013.29004 | jfm = 62.1070.03}}</ref> and [[Patrick Michael Grundy|P. M. Grundy]] (1939).<ref name = "GrundyPaper">{{cite journal
 | last = Grundy | first = P. M. | author-link = Patrick Michael Grundy
 | title = Mathematics and games
 | journal = [[Eureka (University of Cambridge magazine)|Eureka]]
 | url = http://www.archim.org.uk/eureka/27/games.html 
  | year = 1939
 | volume = 2
 | pages = 6‚Äì8 |archive-url = https://web.archive.org/web/20070927192024/http://www.archim.org.uk/eureka/27/games.html |archive-date = 2007-09-27}} Reprinted, 1964, '''27''': 9‚Äì11.</ref>

==Definitions==
For the purposes of the Sprague&ndash;Grundy theorem, a '''''game''''' is a two-player [[sequential game]] of [[perfect information]] satisfying the ''ending condition'' (all games come to an end: there are no infinite lines of play) and the ''normal play condition'' (a player who cannot move loses).

At any given point in the game, a player's '''''position''''' is the set of '''''moves''''' they are allowed to make.  As an example, we can define the ''zero game'' to be the two-player game where neither player has any legal moves.  Referring to the two players as <math>A</math> (for Alice) and <math>B</math> (for Bob), we would denote their positions as <math>(A, B) = (\{\}, \{\})</math>, since the set of moves each player can make is empty.

An '''''[[impartial game]]''''' is one in which at any given point in the game, each player is allowed exactly the same set of moves. Normal-play [[nim]] is an example of an impartial game. In nim, there are one or more heaps of objects, and two players (we'll call them Alice and Bob), take turns choosing a heap and removing 1 or more objects from it. The winner is the player who removes the final object from the final heap.  The game is '''''impartial''''' because for any given configuration of pile sizes, the moves Alice can make on her turn are exactly the same moves Bob would be allowed to make if it were his turn.  In contrast, a game such as [[checkers]] is not impartial because, supposing Alice were playing red and Bob were playing black, for any given arrangement of pieces on the board, if it were Alice's turn, she would only be allowed to move the red pieces, and if it were Bob's turn, he would only be allowed to move the black pieces.

Note that any configuration of an impartial game can therefore be written as a single position, because the moves will be the same no matter whose turn it is. For example, the position of the ''zero game'' can simply be written <math>\{\}</math>, because if it's Alice's turn, she has no moves to make, and if it's Bob's turn, he has no moves to make either.
A move can be associated with the position it leaves the next player in. 

Doing so allows positions to be defined recursively.  For example, consider the following game of Nim played by Alice and Bob.

=== {{anchor|firstExample}}Example Nim Game ===
{{Pre|
 Sizes of heaps  Moves
 A B C
 &nbsp;
 1 2 2           Alice takes 1 from A
 0 2 2           Bob   takes 1 from B 
 0 1 2           Alice takes 1 from C 
 0 1 1           Bob   takes 1 from B 
 0 0 1           Alice takes 1 from C
 0 0 0           Bob   has no moves, so Alice wins
}}

* At step 6 of the game (when all of the heaps are empty) the position is <math>\{\}</math>, because Bob has no valid moves to make.  We name this position <math>*0</math>. 
* At step 5, Alice had exactly one option: to remove one object from heap C, leaving Bob with no moves.  Since her ''move'' leaves Bob in position <math>*0</math>, her ''position'' is written <math>\{ *0 \}</math>.  We name this position <math>*1</math>.
* At step 4, Bob had two options: remove one from B or remove one from C.  Note, however, that it didn't really matter which heap Bob removed the object from: Either way, Alice would be left with exactly one object in exactly one pile. So, using our recursive definition, Bob really only has one move: <math>*1</math>.   Thus, Bob's position is <math>\{*1\}</math>.
* At step 3, Alice had 3 options: remove two from C, remove one from C, or remove one from B.  Removing two from C leaves Bob in position <math>*1</math>.  Removing one from C leaves Bob with two piles, each of size one, i.e., position <math>\{*1\}</math>, as described in step 4. However, removing 1 from B would leave Bob with two objects in a single pile. ''His'' moves would then be <math>*0</math> and  <math>*1</math>, so ''her'' move would result in the position <math>\{*0, *1\}</math>.  We call this position <math>*2</math>.  Alice's position is then the set of all her moves: <math>\big\{*1, \{*1\}, *2\big\}</math>.
* Following the same recursive logic, at step 2, Bob's position is <math display="block">\big\{ \{*1, \{*1\}, *2\}, *2\big\}.</math>
* Finally, at step 1, Alice's position is <math display="block">\Big\{
    \big\{*1, \{*1\}, *2\big\},
    \big\{*2, \{*1, \{*1\},*2\} \big\},
    \big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}
\Big\}.</math>

===Nimbers===
The special names <math>*0</math>, <math>*1</math>, and <math>*2</math> referenced in our example game are called '''''[[nimber]]s'''''.  In general, the nimber <math>*n</math> corresponds to the position in a game of nim where there are exactly <math>n</math> objects in exactly one heap.  
Formally, nimbers are defined inductively as follows:  <math>*0</math> is <math>\{\}</math>, <math>*1 = \{*0\}</math>, <math>*2 = \{*0, *1\}</math> and  for all <math>n \geq 0</math>, <math>*(n+1) = *n \cup \{*n\}</math>.

While the word ''nim''ber comes from the game ''nim'', nimbers can be used to describe the positions of any finite, impartial game, and in fact, the Sprague&ndash;Grundy theorem states that every  instance of a finite, impartial game can be associated with a ''single'' nimber.

===Combining Games===
Two games can be combined by '''''adding''''' their positions together.
For example, consider another game of nim with heaps <math>A'</math>, <math>B'</math>, and <math>C'</math>.

===={{anchor|secondExample}}Example Game 2====
{{Pre|
Sizes of heaps    Moves
&nbsp;
A' B' C'
1  1  1           Alice takes 1 from A'
0  1  1           Bob takes one from B'
0  0  1           Alice takes one from C'
0  0  0           Bob has no moves, so Alice wins.
}}

We can combine it with our [[#firstExample|first example]] to get a combined game with six heaps: <math>A</math>, <math>B</math>, <math>C</math>, <math>A'</math>, <math>B'</math>, and <math>C'</math>:

===={{anchor|thirdExample}}Combined Game====
{{Pre|
 Sizes of heaps     Moves
 A  B  C  A' B' C'  
 &nbsp;
 1  2  2  1  1  1   Alice takes 1 from A
 0  2  2  1  1  1   Bob takes 1 from A'
 0  2  2  0  1  1   Alice takes 1 from B'
 0  2  2  0  0  1   Bob takes 1 from C'
 0  2  2  0  0  0   Alice takes 2 from B
 0  0  2  0  0  0   Bob takes 2 from C
 0  0  0  0  0  0   Alice has no moves, so Bob wins.
}}

To differentiate between the two games, for the [[#firstExample|first example game]], we'll label its starting position <math>\color{blue}S</math>, and color it blue:
<math display="block">\color{blue}S = \Big\{
    \big\{*1, \{*1\}, *2\big\},
    \big\{*2, \{*1, \{*1\},*2\} \big\},
    \big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}
\Big\}</math>

For the [[#secondExample|second example game]], we'll label the starting position <math>\color{red}S'</math> and color it red:
<math display="block">
\color{red}S' = \Big\{\{*1\}\Big\}.
</math>

To compute the starting position of the [[#thirdExample|combined game]], remember that a player can either make a move in the first game, leaving the second game untouched, or make a move in the second game, leaving the first game untouched.  So the combined game's starting position is:
<math display="block">
\color{blue}S \color{black} + \color{red}S' \color{black}= 
\Big\{
    \color{blue}S\color{black} + \color{red} \{*1\} \color{black}
\Big\} \cup \Big\{
     \color{red}S'\color{black} + \color{blue}\{*1, \{*1\}, *2\} \color{black}, 
     \color{red}S'\color{black} + \color{blue} \{*2, \{*1, \{*1\},*2\} \} \color{black},
     \color{red}S'\color{black} + \color{blue} \{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\} \color{black}
\Big\}
</math>

The explicit formula for adding positions is: <math>S+S'=\{S+s'\mid s'\in S'\}\cup\{s+S'\mid s\in S\}</math>, which means that addition is both commutative and associative.

===Equivalence=== 
Positions in impartial games fall into two '''''outcome classes''''': either the next player (the one whose turn it is) wins (an <math>\boldsymbol{\mathcal{N}}</math>'''''- position'''''), or the previous player wins (a <math>\boldsymbol{\mathcal{P}}</math>'''''- position''''').  So, for example, <math>*0</math> is a <math>\mathcal{P}</math>-position, while <math>*1</math> is an <math>\mathcal{N}</math>-position.

Two positions <math>G</math> and <math>G'</math> are '''''equivalent''''' if, no matter what position <math>H</math> is added to them, they are always in the same outcome class.  
Formally,
<math>G \approx G' </math> if and only if <math>\forall H </math>, <math>G + H</math> is in the same outcome class as <math>G' + H</math>.

To use our running examples, notice that in both the [[#firstExample|first]] and [[#secondExample|second]] games above, we can show that on every turn, Alice has a move that forces Bob into a <math>\mathcal{P}</math>-position. Thus, both <math>\color{blue}S</math> and  <math>\color{red}S'</math> are <math>\mathcal{N}</math>-positions.  (Notice that in the combined game, ''Bob'' is the player with the <math>\mathcal{N}</math>-positions. In fact, <math>\color{blue}S \color{black} + \color{red}S' </math> is a <math>\mathcal{P}</math>-position, which as we will see in Lemma 2, means <math> \color{blue} S \color{black} \approx \color{red} S'</math>.)

==First Lemma==
As an intermediate step to proving the main theorem, we show that for every position <math>G</math> and every <math>\mathcal{P}</math>-position <math>A</math>, the equivalence <math>G\approx A+G</math> holds.  By the above definition of equivalence, this amounts to showing that <math>G+H</math> and <math>A+G+H</math> share an outcome class for all <math>H</math>.

Suppose that <math>G+H</math> is a <math>\mathcal{P}</math>-position.  Then the previous player has a winning strategy for <math>A+G+H</math>: respond to moves in <math>A</math> according to their winning strategy for <math>A</math> (which exists by virtue of <math>A</math> being a <math>\mathcal{P}</math>-position), and respond to moves in <math>G+H</math> according to their winning strategy for <math>G+H</math> (which exists for the analogous reason).  So <math>A+G+H</math> must also be a <math>\mathcal{P}</math>-position.

On the other hand, if <math>G+H</math> is an <math>\mathcal{N}</math>-position, then <math>A+G+H</math> is also an <math>\mathcal{N}</math>-position, because the next player has a winning strategy: choose a <math>\mathcal{P}</math>-position from among the <math>G+H</math> options, and we conclude from the previous paragraph that adding <math>A</math> to that position is still a <math>\mathcal{P}</math>-position.  Thus, in this case, <math>A+G+H</math> must be a <math>\mathcal{N}</math>-position, just like <math>G+H</math>.

As these are the only two cases, the lemma holds.

==Second Lemma==
As a further step, we show that <math>G\approx G'</math> if and only if <math>G+G'</math> is a <math>\mathcal{P}</math>-position.

In the forward direction, suppose that <math>G\approx G'</math>.  Applying the definition of equivalence with <math>H=G</math>, we find that <math>G'+G</math> (which is equal to <math>G+G'</math> by [[commutativity]] of addition) is in the same outcome class as <math>G+G</math>.  But <math>G+G</math> must be a <math>\mathcal{P}</math>-position: for every move made in one copy of <math>G</math>, the previous player can respond with the same move in the other copy, and so always make the last move.

In the reverse direction, since <math>A=G+G'</math> is a <math>\mathcal{P}</math>-position by hypothesis, it follows from the first lemma, <math>G\approx G+A</math>, that <math>G\approx G+(G+G')</math>.   Similarly, since <math>B=G+G</math> is also a <math>\mathcal{P}</math>-position, it follows from the first lemma in the form  <math>G'\approx G'+B</math> that <math>G'\approx G'+(G+G)</math>.  By [[associativity]] and commutativity, the right-hand sides of these results are equal.  Furthermore, <math>\approx</math> is an [[equivalence relation]] because equality is an equivalence relation on outcome classes.  Via the [[Transitive relation|transitivity]] of <math>\approx</math>, we can conclude that <math>G\approx G'</math>.

==Proof==
We prove that all positions are equivalent to a nimber by [[structural induction]].  The more specific result, that the given game's initial position must be equivalent to a nimber, shows that the game is itself equivalent to a nimber.

Consider a position <math>G = \{G_1, G_2, \ldots, G_k\}</math>. By the induction hypothesis, all of the options are equivalent to nimbers, say <math>G_i \approx *n_i</math>. So let <math>G'=\{*n_1, *n_2, \ldots, *n_k\}</math>.  We will show that <math>G \approx *m</math>, where <math>m</math> is the [[mex (mathematics)|mex (minimum exclusion)]] of the numbers <math>n_1, n_2, \ldots, n_k</math>, that is, the smallest non-negative integer not equal to some <math>n_i</math>.

The first thing we need to note is that <math>G \approx G'</math>, by way of the second lemma. If <math>k</math> is zero, the claim is trivially true.  Otherwise, consider <math>G+G'</math>. If the next player makes a move to <math>G_i</math> in <math>G</math>, then the previous player can move to <math>*n_i</math> in <math>G'</math>, and conversely if the next player makes a move in <math>G'</math>. After this, the position is a <math>\mathcal{P}</math>-position by the lemma's forward implication. Therefore, <math>G+G'</math> is a <math>\mathcal{P}</math>-position, and, citing the lemma's reverse implication, <math>G \approx G'</math>.

Now let us show that <math>G'+*m</math> is a <math>\mathcal{P}</math>-position, which, using the second lemma once again, means that <math>G'\approx *m</math>. We do so by giving an explicit strategy for the previous player.

Suppose that <math>G'</math> and <math>*m</math> are empty.  Then <math>G'+*m</math> is the null set, clearly a <math>\mathcal{P}</math>-position.

Or consider the case that the next player moves in the component <math>*m</math> to the option <math>*m'</math> where <math>m'<m</math>. Because <math>m</math> was the ''minimum'' excluded number, the previous player can move in <math>G'</math> to <math>*m'</math>.  And, as shown before, any position plus itself is a <math>\mathcal{P}</math>-position.

Finally, suppose instead that the next player moves in the component <math>G'</math> to the option <math>*n_i</math>. If <math>n_i < m</math> then the previous player moves in <math>*m</math> to <math>*n_i</math>; otherwise, if <math>n_i > m</math>, the previous player moves in <math>*n_i</math> to <math>*m</math>; in either case the result is a position plus itself. (It is not possible that <math>n_i = m</math> because <math>m</math> was defined to be different from all the <math>n_i</math>.)

In summary, we have <math>G\approx G'</math> and <math>G'\approx *m</math>.  By transitivity, we conclude that <math>G \approx *m</math>, as desired.

==Development==
If <math>G</math> is a position of an impartial game, the unique integer <math>m</math> such that <math>G \approx *m</math> is called its Grundy value, or Grundy number, and the function that assigns this value to each such position is called the Sprague‚ÄìGrundy function.  R. L. Sprague and P. M. Grundy independently gave an explicit definition of this function, not based on any concept of equivalence to nim positions, and showed that it had the following properties:
*The Grundy value of a single nim pile of size <math>m</math> (i.e. of the position <math>*m</math>) is <math>m</math>;
* A position is a loss for the next player to move (i.e. a <math>\mathcal{P}</math>-position) if and only if its Grundy value is zero; and
*The Grundy value of the sum of a finite set of positions is just the [[nim-sum]] of the Grundy values of its summands.
It follows straightforwardly from these results that if a position <math>G</math> has a Grundy value of <math>m</math>, then <math>G + H</math> has the same Grundy value as  <math>*m + H</math>, and therefore belongs to the same outcome class, for any position <math>H</math>.   Thus, although Sprague and Grundy never explicitly stated the theorem described in this article, it follows directly from their results and is credited to them.<ref>{{citation
| last= Smith
| first = Cedric A.B.
| title = Patrick Michael Grundy, 1917‚Äì1959
| journal = Journal of the Royal Statistical Society, Series A
| year = 1960
| volume = 123
| issue = 2
| pages = 221‚Äì22
}}</ref><ref>{{Cite journal|author1=Schleicher, Dierk |author2=Stoll, Michael | title = An introduction to Conway's games and numbers
 |journal=Moscow Mathematical Journal
 |volume=6 |issue=2 |pages=359‚Äì388 | year = 2006
 | arxiv = math.CO/0410026|doi=10.17323/1609-4514-2006-6-2-359-388 }}</ref>
These results have subsequently been developed into the field of [[combinatorial game theory]], notably by [[Richard K. Guy|Richard Guy]], [[E. R. Berlekamp|Elwyn Berlekamp]], [[John Horton Conway]] and others, where they are now encapsulated in the Sprague‚ÄìGrundy theorem and its proof in the form described here. The field is presented in the books ''[[Winning Ways for your Mathematical Plays]]'' and ''[[On Numbers and Games]]''.

==See also==
*[[Genus theory]]
*[[Indistinguishability quotient]]

==References==
{{Reflist}}

==External links==
* [http://www.cut-the-knot.org/Curriculum/Games/Grundy.shtml Grundy's game] at [[cut-the-knot]]
* [https://www.math.ucla.edu/~tom/Game_Theory/comb.pdf Easily readable, introductory account from the UCLA Math Department]
* [http://sputsoft.com/blog/2009/04/the-game-of-nim.html The Game of Nim] at [http://sputsoft.com sputsoft.com]
* {{citation
 | title = Combinatorial Games, Theory and Applications| url = http://www.itu.dk/people/brit/Brits%20thesis.pdf
 | year = 2000
 | author = Milvang-Jensen, Brit C. A.
 | citeseerx = 10.1.1.89.805
 }}

{{DEFAULTSORT:Sprague-Grundy theorem}}
[[Category:Combinatorial game theory]]
[[Category:Theorems in discrete mathematics]]JõIn combinatorial game theory, the Sprague‚ÄìGrundy theorem states that every impartial game under the normal play convention is equivalent to a one-heap game of nim, or to an infinite generalization of nim. It can therefore be represented as a natural number, the size of the heap in its equivalent game of nim, as an ordinal number in the infinite generalization, or alternatively as a nimber, the value of that one-heap game in an algebraic system whose addition operation combines multiple heaps to form a single equivalent heap in nim.JÕThe Grundy value or nim-value of any impartial game is the unique nimber that the game is equivalent to. In the case of a game whose positions are indexed by the natural numbers (like nim itself, which is indexed by its heap sizes), the sequence of nimbers for successive positions of the game is called the nim-sequence of the game.J∫The Sprague‚ÄìGrundy theorem and its proof encapsulate the main results of a theory discovered independently by R. P. Sprague (1936) and P. M. Grundy (1939). Reprinted, 1964, 27: 9‚Äì11.JDefinitionsJèFor the purposes of the Sprague‚ÄìGrundy theorem, a game is a two-player sequential game of perfect information satisfying the ending condition (all games come to an end: there are no infinite lines of play) and the normal play condition (a player who cannot move loses).JˇAt any given point in the game, a player's position is the set of moves they are allowed to make. As an example, we can define the zero game to be the two-player game where neither player has any legal moves. Referring to the two players as A (for Alice) and B (for Bob), we would denote their positions as (A, B) = (\{\}, \{\}), since the set of moves each player can make is empty.JúAn impartial game is one in which at any given point in the game, each player is allowed exactly the same set of moves. Normal-play nim is an example of an impartial game. In nim, there are one or more heaps of objects, and two players (we'll call them Alice and Bob), take turns choosing a heap and removing 1 or more objects from it. The winner is the player who removes the final object from the final heap. The game is impartial because for any given configuration of pile sizes, the moves Alice can make on her turn are exactly the same moves Bob would be allowed to make if it were his turn. In contrast, a game such as checkers is not impartial because, supposing Alice were playing red and Bob were playing black, for any given arrangement of pieces on the board, if it were Alice's turn, she would only be allowed to move the red pieces, and if it were Bob's turn, he would only be allowed to move the black pieces.J’Note that any configuration of an impartial game can therefore be written as a single position, because the moves will be the same no matter whose turn it is. For example, the position of the zero game can simply be written \{\}, because if it's Alice's turn, she has no moves to make, and if it's Bob's turn, he has no moves to make either.JHA move can be associated with the position it leaves the next player in.J}Doing so allows positions to be defined recursively. For example, consider the following game of Nim played by Alice and Bob.JExample Nim GameJ’
* At step 6 of the game (when all of the heaps are empty) the position is \{\}, because Bob has no valid moves to make. We name this position *0.
* At step 5, Alice had exactly one option: to remove one object from heap C, leaving Bob with no moves. Since her move leaves Bob in position *0, her position is written \{ *0 \}. We name this position *1.
* At step 4, Bob had two options: remove one from B or remove one from C. Note, however, that it didn't really matter which heap Bob removed the object from: Either way, Alice would be left with exactly one object in exactly one pile. So, using our recursive definition, Bob really only has one move: *1. Thus, Bob's position is \{*1\}.
* At step 3, Alice had 3 options: remove two from C, remove one from C, or remove one from B. Removing two from C leaves Bob in position *1. Removing one from C leaves Bob with two piles, each of size one, i.e., position \{*1\}, as described in step 4. However, removing 1 from B would leave Bob with two objects in a single pile. His moves would then be *0 and *1, so her move would result in the position \{*0, *1\}. We call this position *2. Alice's position is then the set of all her moves: \big\{*1, \{*1\}, *2\big\}.
* Following the same recursive logic, at step 2, Bob's position is \big\{ \{*1, \{*1\}, *2\}, *2\big\}.
* Finally, at step 1, Alice's position is \Big\{J\big\{*1, \{*1\}, *2\big\},J#\big\{*2, \{*1, \{*1\},*2\} \big\},J2\big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}J\Big\}.JNimbersJ—The special names *0, *1, and *2 referenced in our example game are called nimbers. In general, the nimber *n corresponds to the position in a game of nim where there are exactly n objects in exactly one heap.JOFormally, nimbers are defined inductively as follows: *0 is \{\}, *1 \{*0\}, *2J9\{*0, *1\} and for all n \geq 0, *(n+1) = *n \cup \{*n\}.JÑWhile the word nimber comes from the game nim, nimbers can be used to describe the positions of any finite, impartial game, and in fact, the Sprague‚ÄìGrundy theorem states that every instance of a finite, impartial game can be associated with a single nimber.JCombining GamesJ=Two games can be combined by adding their positions together.JDFor example, consider another game of nim with heaps A', B', and C'.JExample Game 2JhWe can combine it with our first example to get a combined game with six heaps: A, B, C, A', B', and C':JCombined GameJáTo differentiate between the two games, for the first example game, we'll label its starting position \color{blue}S, and color it blue:J\color{blue}SJ\Big\{J\big\{*1, \{*1\}, *2\big\},J#\big\{*2, \{*1, \{*1\},*2\} \big\},J2\big\{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\big\}J\Big\}J^For the second example game, we'll label the starting position \color{red}S' and color it red:J#\color{red}S' = \Big\{\{*1\}\Big\}.JåTo compute the starting position of the combined game, remember that a player can either make a move in the first game, leaving the second game untouched, or make a move in the second game, leaving the first game untouched. So the combined game's starting position is:J:\color{blue}S \color{black} + \color{red}S' \color{black}=J\Big\{J=\color{blue}S\color{black} + \color{red} \{*1\} \color{black}J\Big\} \cup \Big\{JJ\color{red}S'\color{black} + \color{blue}\{*1, \{*1\}, *2\} \color{black},JS\color{red}S'\color{black} + \color{blue} \{*2, \{*1, \{*1\},*2\} \} \color{black},Jb\color{red}S'\color{black} + \color{blue} \{\{*1\}, \{\{*1\}\}, \{*1, \{*1\}, *2\}\} \color{black}J\Big\}JüThe explicit formula for adding positions is: S+S'=\{S+s'\mid s'\in S'\}\cup\{s+S'\mid s\in S\}, which means that addition is both commutative and associative.JEquivalenceJ≥Positions in impartial games fall into two outcome classes: either the next player (the one whose turn it is) wins (an \boldsymbol{\mathcal{N}}- position), or the previous player wins (a \boldsymbol{\mathcal{P}}- position). So, for example, *0 is a \mathcal{P}-position, while *1 is an \mathcal{N}-position.JÄTwo positions G and G' are equivalent if, no matter what position H is added to them, they are always in the same outcome class.J	Formally,JUG \approx G' if and only if \forall H , G + H is in the same outcome class as G' + H.J¯To use our running examples, notice that in both the first and second games above, we can show that on every turn, Alice has a move that forces Bob into a \mathcal{P}-position. Thus, both \color{blue}S and \color{red}S' are \mathcal{N}-positions. (Notice that in the combined game, Bob is the player with the \mathcal{N}-positions. In fact, \color{blue}S \color{black} + \color{red}S' is a \mathcal{P}-position, which as we will see in Lemma 2, means \color{blue} S \color{black} \approx \color{red} S'.)JFirst LemmaJëAs an intermediate step to proving the main theorem, we show that for every position G and every \mathcal{P}-position A, the equivalence G\approx A+G holds. By the above definition of equivalence, this amounts to showing that G+H and A+G+H share an outcome class for all H.JÅSuppose that G+H is a \mathcal{P}-position. Then the previous player has a winning strategy for A+G+H: respond to moves in A according to their winning strategy for A (which exists by virtue of A being a \mathcal{P}-position), and respond to moves in G+H according to their winning strategy for G+H (which exists for the analogous reason). So A+G+H must also be a \mathcal{P}-position.JÄOn the other hand, if G+H is an \mathcal{N}-position, then A+G+H is also an \mathcal{N}-position, because the next player has a winning strategy: choose a \mathcal{P}-position from among the G+H options, and we conclude from the previous paragraph that adding A to that position is still a \mathcal{P}-position. Thus, in this case, A+G+H must be a \mathcal{N}-position, just like G+H.J1As these are the only two cases, the lemma holds.JSecond LemmaJZAs a further step, we show that G\approx G' if and only if G+G' is a \mathcal{P}-position.JáIn the forward direction, suppose that G\approx G'. Applying the definition of equivalence with H=G, we find that G'+G (which is equal to G+G' by commutativity of addition) is in the same outcome class as G+G. But G+G must be a \mathcal{P}-position: for every move made in one copy of G, the previous player can respond with the same move in the other copy, and so always make the last move.J®In the reverse direction, since AG+G' is a \mathcal{P}-position by hypothesis, it follows from the first lemma, G\approx G+A, that G\approx G+(G+G'). Similarly, since BJˇG+G is also a \mathcal{P}-position, it follows from the first lemma in the form G'\approx G'+B that G'\approx G'+(G+G). By associativity and commutativity, the right-hand sides of these results are equal. Furthermore, \approx is an equivalence relation because equality is an equivalence relation on outcome classes. Via the transitivity of \approx, we can conclude that G\approx G'.JProofJÊWe prove that all positions are equivalent to a nimber by structural induction. The more specific result, that the given game's initial position must be equivalent to a nimber, shows that the game is itself equivalent to a nimber.JõConsider a position G \{G_1, G_2, \ldots, G_k\}. By the induction hypothesis, all of the options are equivalent to nimbers, say G_i \approx *n_i. So let G'JÃ\{*n_1, *n_2, \ldots, *n_k\}. We will show that G \approx *m, where m is the mex (minimum exclusion) of the numbers n_1, n_2, \ldots, n_k, that is, the smallest non-negative integer not equal to some n_i.JÁThe first thing we need to note is that G \approx G', by way of the second lemma. If k is zero, the claim is trivially true. Otherwise, consider G+G'. If the next player makes a move to G_i in G, then the previous player can move to *n_i in G', and conversely if the next player makes a move in G'. After this, the position is a \mathcal{P}-position by the lemma's forward implication. Therefore, G+G' is a \mathcal{P}-position, and, citing the lemma's reverse implication, G \approx G'.JπNow let us show that G'+*m is a \mathcal{P}-position, which, using the second lemma once again, means that G'\approx *m. We do so by giving an explicit strategy for the previous player.J]Suppose that G' and *m are empty. Then G'+*m is the null set, clearly a \mathcal{P}-position.JˇOr consider the case that the next player moves in the component *m to the option *m' where m'. Because m was the minimum excluded number, the previous player can move in G' to *m'. And, as shown before, any position plus itself is a \mathcal{P}-position.JﬂFinally, suppose instead that the next player moves in the component G' to the option *n_i. If n_i then the previous player moves in *m to *n_i; otherwise, if n_i > m, the previous player moves in *n_i to *m; in either case the result is a position plus itself. (It is not possible that n_i = m because m was defined to be different from all the n_i.)JmIn summary, we have G\approx G' and G'\approx *m. By transitivity, we conclude that G \approx *m, as desired.JDevelopmentJ∞If G is a position of an impartial game, the unique integer m such that G \approx *m is called its Grundy value, or Grundy number, and the function that assigns this value to each such position is called the Sprague‚ÄìGrundy function. R. L. Sprague and P. M. Grundy independently gave an explicit definition of this function, not based on any concept of equivalence to nim positions, and showed that it had the following properties:J¬*The Grundy value of a single nim pile of size m (i.e. of the position *m) is m;
* A position is a loss for the next player to move (i.e. a \mathcal{P}-position) if and only if its Grundy value is zero; and
*The Grundy value of the sum of a finite set of positions is just the nim-sum of the Grundy values of its summands.JÛIt follows straightforwardly from these results that if a position G has a Grundy value of m, then G + H has the same Grundy value as *m + H, and therefore belongs to the same outcome class, for any position H. Thus, although Sprague and Grundy never explicitly stated the theorem described in this article, it follows directly from their results and is credited to them.JÙThese results have subsequently been developed into the field of combinatorial game theory, notably by Richard Guy, Elwyn Berlekamp, John Horton Conway and others, where they are now encapsulated in the Sprague‚ÄìGrundy theorem and its proof in the form described here. The field is presented in the books Winning Ways for your Mathematical Plays and On Numbers and Games.JSee alsoJ,*Genus theory
*Indistinguishability quotientJ
ReferencesJExternal linksJ* at cut-the-knot
* 
* at 
*